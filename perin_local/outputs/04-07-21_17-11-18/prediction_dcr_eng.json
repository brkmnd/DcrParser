{"id": "17", "flavor": 1, "language": "eng", "framework": "dcr", "version": 1.1, "time": "2021-02-09", "source": "P20.xml", "input": "There are three actors, or roles, involved in the Statement of Work (SoW) creation process consisting of two departments, the Service Sales department and the Professional Services department, and the Customer. The SoW creation process is initiated by a workshop in which the Statement of Work is developed by the Service Sales department. The SoW creation workshop contains three events: 'estimate project length', 'estimate resource hours' and 'estimate project cost'. All the activities in the SoW creation workshop are nested as the Statement of Work can only be finished if all activities are executed, hence project length, hours and cost should be estimated in order for the SoW to be completed. The SoW is then evaluated before sending it to the customer. It can either be rejected or accepted internally by the Service Sales department. If the SoW is being rejected it is not required that all estimations have to be redone. The flexibility needs to be given in order for the Service Sales department to adjust only one or two estimations or even small formalities that do not require a new SoW creation workshop. Once the adjustment is done, the SoW can be sent for internal evaluation again. This process can be repeated as many times as needed until the SoW is accepted and finally sent to the customer. Once the SoW is sent to the customer, it cannot be modified and sent to the customer again. This ensures alignment between the two parties, Tradeshift and the Customer. The Customer is then responsible for reviewing the SoW and choosing one of the three following options: 'Rework SoW', 'Reject SoW' and 'Accept SoW'. Since these activities belong to a second subprocess ('Customer choice'), not all activities have to be executed before moving on to an activity outside of the subprocess. If the customer accepts the SoW, it is automatically handed over to the Professional Services department. Since the 'accept SoW' activity excludes itself, as well", "tops": [0], "nodes": [{"id": 0, "label": "customer", "anchors": []}], "edges": []}
{"id": "18", "flavor": 1, "language": "eng", "framework": "dcr", "version": 1.1, "time": "2021-02-09", "source": "P21.xml", "input": "The process begins when the Project Manager must hand over the Operational Readiness Review (ORR) documentation task to the Delivery Project Lead (DPL). The DPL must initialise the ORR process once, thereafter the contract requirements and the ORR checklist must be checked. Then the DPL must create the documentation tasks for the different stakeholders. He sends these tasks to the Operations Team who creates the documentation required. The DPL also sends documentation tasks to the Project Manager, who then delegates the tasks in the project team. The Operations Team and the Project Manager sends the documentation to the DPL once the tasks are completed. The DPL receives the documentation from the Project Manager and the Operation Team Manager and compiles the documentation. Then the DPL sends an invitation to the Project Manager and the Operations Team Manager for an approval meeting. At the meeting they either reject or approve the documentation. If it gets rejected, the documentation has to be reworked. If there is rework, the approval will be in written format without a new meeting. After the approval, the DPL compiles the documentation and sends it to approval with the customer. If the documentation is approved at the meeting, the DPL must send the documentation to approval with the customer. The customer receives and reads the documentation, and either rejects or approves it. If rejected, the customer must send the documentation back to the DPL, who then facilitates the rework. If approved, the document is sent to the DPL and the ORR process is complete.", "tops": [0], "nodes": [{"id": 0, "label": "customer", "anchors": []}, {"id": 1, "label": "customer", "anchors": []}], "edges": [{"source": 0, "target": 1, "label": "role"}]}
{"id": "19", "flavor": 1, "language": "eng", "framework": "dcr", "version": 1.1, "time": "2021-02-09", "source": "P22.xml", "input": "The process starts when the storage facility used by Puori sends a product sample to Ellipse. Ellipse then notifies Puori of the new sample. Before testing can begin, Puori then request a test of a sample through Ellipse. Ellipse must then test the product, as well as have additional testing done through Eurofarms. When all testing is done, results will be compiled into a report before sending the report to Puori for approval. This enables Puori to evaluate the results. If the results are different than expected, Puori may ask Ellipse for re-testing. If the results of the re-testing do not live up to Puoris standards, the batch will be discarded. If the results are sound Ellipse must send the results to Clean Label, who must then publish the results. Puori then checks whether all is in order and either approves of the publication, or compiles a list of possible errors. If errors are found, Clean Label must correct the errors before publishing the results again. ", "tops": [0], "nodes": [{"id": 0, "label": "customer", "anchors": []}], "edges": []}
{"id": "20", "flavor": 1, "language": "eng", "framework": "dcr", "version": 1.1, "time": "2021-02-09", "source": "P23.xml", "input": "The process starts when the storage facility used by Puori sends a product sample to Ellipse. Ellipse then notifies Puori of the new sample. Before testing can begin, Puori then request a test of a sample through Ellipse. Ellipse must then test the product, as well as have additional testing done through Eurofarms. When all testing is done, results will be compiled into a report before sending the report to Puori for approval. This enables Puori to evaluate the results. If the results are different than expected, Puori may ask Ellipse for re-testing. If the results of the re-testing do not live up to Puoris standards, the batch will be discarded. If the results are sound Ellipse must send the results to Clean Label, who must then publish the results. Puori then checks whether all is in order and either approves of the publication, or compiles a list of possible errors. If errors are found, Clean Label must correct the errors before publishing the results again. ", "tops": [0], "nodes": [{"id": 0, "label": "customer", "anchors": []}], "edges": []}
{"id": "21", "flavor": 1, "language": "eng", "framework": "dcr", "version": 1.1, "time": "2021-02-09", "source": "P25.xml", "input": "The process is always initiated when the purchaser receives an order request in their portal ServiceNow, which is modelled in the graph as an activity called Receive order in ServiceNow. Followed by this is the activity Check stock, which means that the purchaser must check whether or not the product is on stock, before he knows where to go next. There are now six paths the purchaser can execute which are based on the six different required scenarios and the two forbidden scenarios. The scenarios are described in detail later on in this section. The first thing the Purchaser does is checking if the item is on stock. From here he will move on directly to Check item value so that he knows if the product should be registered in the system for the individual user. This is a necessary step which needs to be done and is a result of checking the stock. Now if the item has a low value, it is ready for delivery, but if it has a high value the Check item value activity, makes Registration available for execution. After this has been done, the delivery of the item is now a mandatory part of the process. This will end with the purchaser always closing the order in ServiceNow. If the item is not on stock, the purchaser must first place the order from an external vendor. From here, the purchaser must again go to the activity of Check item value, so that he will know if the item should be registered or not. After this, the purchaser must ensure whether the item has been received, and if not, the purchaser contacts the vendor which is shown in the activities Check delivery status followed by Contact vendor. Lastly the order can be closed in ServiceNow, which is shown with the activity Close order in ServiceNow.", "tops": [0], "nodes": [{"id": 0, "label": "customer", "anchors": []}], "edges": []}
